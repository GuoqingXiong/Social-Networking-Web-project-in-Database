CREATE TABLE USERS (
  USER_ID BIGSERIAL NOT NULL PRIMARY KEY ,
  USER_NAME VARCHAR(20) ,
  PASSWORD VARCHAR(20) NOT NULL ,
  URL VARCHAR(500) NOT NULL
);

CREATE TABLE PROFILE (
  PROFILE_ID BIGSERIAL NOT NULL PRIMARY KEY ,
  FIRST_NAME VARCHAR(10),
  LAST_NAME VARCHAR(10),
  AGE INTEGER,
  APT VARCHAR(30),
  STREET VARCHAR(30),
  CITY VARCHAR(15),
  STATE VARCHAR(15),
  ZIP INTEGER,
  GREETING_EVERYONE TEXT,
  SELF_INTRODUCTION TEXT,
  PUBLICITY_LEVEL INTEGER DEFAULT 0,/*0 FOR PUBLIC TOTALLY, 1 FOR FRIEND OF FRIEND, 2 FOR FRIEND ONLY, 3 FOR PRIVATE*/
  USER_ID BIGSERIAL NOT NULL REFERENCES USERS
);

CREATE TABLE PHONE (
  ID BIGSERIAL NOT NULL PRIMARY KEY ,
  NUMBER BIGSERIAL NOT NULL ,
  PROFILE_ID BIGSERIAL NOT NULL REFERENCES PROFILE
);

CREATE TABLE EMAIL (
  ID BIGSERIAL NOT NULL PRIMARY KEY ,
  ADDRESS VARCHAR(30) NOT NULL ,
  PROFILE_ID BIGSERIAL NOT NULL REFERENCES PROFILE
);

CREATE TABLE EDUCATION (
  ID BIGSERIAL NOT NULL PRIMARY KEY ,
  SCHOOL VARCHAR(20) NOT NULL ,
  STATE VARCHAR (20),
  COUNTRY VARCHAR (20),
  DEGREE VARCHAR (20),
  START_DATE DATE,
  END_DATE DATE,
  PROFILE_ID BIGSERIAL NOT NULL REFERENCES PROFILE
);

CREATE TABLE WORK (
  ID BIGSERIAL NOT NULL PRIMARY KEY ,
  COMPANY VARCHAR(20) NOT NULL ,
  STATE VARCHAR (20),
  COUNTRY VARCHAR (20),
  POSITION VARCHAR (20),
  DESCRIPTION TEXT,
  START_DATE DATE,
  END_DATE DATE,
  PROFILE_ID BIGSERIAL NOT NULL REFERENCES PROFILE
);

CREATE TABLE PHOTO_FOR_PROFILE (
  ID BIGSERIAL NOT NULL PRIMARY KEY ,
  BODY BYTEA NOT NULL ,
  PUBLICITY_LEVEL INTEGER DEFAULT 0,
  PROFILE_ID BIGSERIAL NOT NULL REFERENCES PROFILE
);

CREATE TABLE AUDIO_FOR_PROFILE (
  ID BIGSERIAL NOT NULL PRIMARY KEY ,
  BODY BYTEA NOT NULL ,
  PUBLICITY_LEVEL INTEGER DEFAULT 0,
  PROFILE_ID BIGSERIAL NOT NULL REFERENCES PROFILE
);

CREATE TABLE FRIENDSHIP (
  REQUEST_ID BIGSERIAL NOT NULL REFERENCES USERS,
  ACCEPT_ID BIGSERIAL NOT NULL REFERENCES USERS,
  TIMESTAMP TIMESTAMP NOT NULL ,
  SUCCESSFUL BOOLEAN DEFAULT FALSE ,
  PUBLICITY_LEVEL INTEGER DEFAULT 0,
  PRIMARY KEY (REQUEST_ID, ACCEPT_ID)
);

CREATE TABLE DIARY (
  DIARY_ID BIGSERIAL PRIMARY KEY,
  TITLE TEXT NOT NULL,
  BODY TEXT NOT NULL ,
  CREATE_TIMESTAMP TIMESTAMP NOT NULL ,
  LAST_UPDATE_TIMESTAMP TIMESTAMP NOT NULL ,
  PUBLICITY_LEVEL INTEGER DEFAULT 0,
  USER_ID BIGSERIAL NOT NULL REFERENCES USERS
);

CREATE TABLE LOGIN(
  ID BIGSERIAL NOT NULL PRIMARY KEY ,
  TIMESTAMP TIMESTAMP NOT NULL ,
  USER_ID BIGSERIAL NOT NULL REFERENCES USERS
);

CREATE TABLE LOGOUT(
  ID BIGSERIAL NOT NULL PRIMARY KEY,
  TIMESTAMP TIMESTAMP NOT NULL ,
  USER_ID BIGSERIAL NOT NULL REFERENCES USERS
);

CREATE TABLE CONTENT(
  CONTEND_ID BIGSERIAL PRIMARY KEY ,
  BODY TEXT NOT NULL ,
  PUBLICITY_LEVEL INTEGER DEFAULT 0,
  DIARY_ID BIGSERIAL NOT NULL REFERENCES DIARY
);

CREATE TABLE PHOTO_FOR_CONTENT(
  ID BIGSERIAL NOT NULL PRIMARY KEY ,
  BODY BYTEA NOT NULL ,
  PUBLICITY_LEVEL INTEGER DEFAULT 0,
  CONTENT_ID BIGSERIAL NOT NULL REFERENCES CONTENT
);

CREATE TABLE AUDIO_FOR_CONTENT(
  ID BIGSERIAL NOT NULL PRIMARY KEY ,
  BODY BYTEA NOT NULL ,
  PUBLICITY_LEVEL INTEGER DEFAULT 0,
  CONTENT_ID BIGSERIAL NOT NULL REFERENCES CONTENT
);

CREATE TABLE COMMENT_FOR_DIARY(
  COMMENT_ID BIGSERIAL ,
  BODY TEXT NOT NULL PRIMARY KEY,
  CREATE_TIMESTAMP TIMESTAMP NOT NULL,
  PUBLICITY_LEVEL INTEGER DEFAULT 0,
  USER_ID BIGSERIAL NOT NULL REFERENCES USERS,
  DIARY_ID BIGSERIAL NOT NULL REFERENCES DIARY
);

-- CREATE TABLE PHOTO_FOR_COMMENT(
--   ID BIGSERIAL NOT NULL PRIMARY KEY ,
--   BODY BYTEA NOT NULL ,
--   PUBLICITY_LEVEL INTEGER,
--   COMMENT_ID BIGSERIAL NOT NULL REFERENCES COMMENT_FOR_DIARY
-- );
--
-- CREATE TABLE AUDIO_FOR_COMMENT(
--   ID BIGSERIAL NOT NULL PRIMARY KEY ,
--   BODY BYTEA NOT NULL ,
--   PUBLICITY_LEVEL INTEGER,
--   COMMENT_ID BIGSERIAL NOT NULL REFERENCES COMMENT_FOR_DIARY
-- );

CREATE TABLE GREETING(
  ID BIGSERIAL NOT NULL PRIMARY KEY ,
  BODY TEXT NOT NULL ,
  PUBLICITY_LEVEL INTEGER,
  FROM_USER_ID BIGSERIAL NOT NULL REFERENCES USERS,
  TO_USER_ID BIGSERIAL NOT NULL REFERENCES USERS
);
